$date
	Fri Oct  3 19:39:31 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 32 ! sm_data [31:0] $end
$var wire 32 " bm_data [31:0] $end
$var reg 3 # address [2:0] $end
$var reg 1 $ clk $end
$var reg 1 % write_enable $end
$var integer 32 & i [31:0] $end
$scope module dut $end
$var wire 3 ' address [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % write_enable $end
$var wire 32 ( sm_data [31:0] $end
$var wire 32 ) bm_data [31:0] $end
$scope module bm $end
$var wire 3 * address [2:0] $end
$var wire 1 $ clk $end
$var wire 32 + data_in [31:0] $end
$var wire 32 , data_out [31:0] $end
$var wire 1 % write_enable $end
$upscope $end
$scope module sm $end
$var wire 3 - address [2:0] $end
$var wire 1 $ clk $end
$var wire 32 . data_in [31:0] $end
$var wire 8 / en [7:0] $end
$var wire 1 % write_enable $end
$var wire 8 0 re [7:0] $end
$var wire 32 1 o7 [31:0] $end
$var wire 32 2 o6 [31:0] $end
$var wire 32 3 o5 [31:0] $end
$var wire 32 4 o4 [31:0] $end
$var wire 32 5 o3 [31:0] $end
$var wire 32 6 o2 [31:0] $end
$var wire 32 7 o1 [31:0] $end
$var wire 32 8 o0 [31:0] $end
$var wire 32 9 data_out [31:0] $end
$scope module dec $end
$var wire 3 : W [2:0] $end
$var reg 8 ; Y [7:0] $end
$upscope $end
$scope module mux $end
$var wire 3 < S [2:0] $end
$var wire 32 = W7 [31:0] $end
$var wire 32 > W6 [31:0] $end
$var wire 32 ? W5 [31:0] $end
$var wire 32 @ W4 [31:0] $end
$var wire 32 A W3 [31:0] $end
$var wire 32 B W2 [31:0] $end
$var wire 32 C W1 [31:0] $end
$var wire 32 D W0 [31:0] $end
$var reg 32 E f [31:0] $end
$upscope $end
$scope module w0 $end
$var wire 1 $ clk $end
$var wire 32 F data_in [31:0] $end
$var wire 1 G write_enable $end
$var reg 32 H data_out [31:0] $end
$upscope $end
$scope module w1 $end
$var wire 1 $ clk $end
$var wire 32 I data_in [31:0] $end
$var wire 1 J write_enable $end
$var reg 32 K data_out [31:0] $end
$upscope $end
$scope module w2 $end
$var wire 1 $ clk $end
$var wire 32 L data_in [31:0] $end
$var wire 1 M write_enable $end
$var reg 32 N data_out [31:0] $end
$upscope $end
$scope module w3 $end
$var wire 1 $ clk $end
$var wire 32 O data_in [31:0] $end
$var wire 1 P write_enable $end
$var reg 32 Q data_out [31:0] $end
$upscope $end
$scope module w4 $end
$var wire 1 $ clk $end
$var wire 32 R data_in [31:0] $end
$var wire 1 S write_enable $end
$var reg 32 T data_out [31:0] $end
$upscope $end
$scope module w5 $end
$var wire 1 $ clk $end
$var wire 32 U data_in [31:0] $end
$var wire 1 V write_enable $end
$var reg 32 W data_out [31:0] $end
$upscope $end
$scope module w6 $end
$var wire 1 $ clk $end
$var wire 32 X data_in [31:0] $end
$var wire 1 Y write_enable $end
$var reg 32 Z data_out [31:0] $end
$upscope $end
$scope module w7 $end
$var wire 1 $ clk $end
$var wire 32 [ data_in [31:0] $end
$var wire 1 \ write_enable $end
$var reg 32 ] data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ]
0\
b10111010110111000000111111111110 [
bx Z
0Y
b10111010110111000000111111111110 X
bx W
0V
b10111010110111000000111111111110 U
bx T
0S
b10111010110111000000111111111110 R
bx Q
0P
b10111010110111000000111111111110 O
bx N
0M
b10111010110111000000111111111110 L
bx K
0J
b10111010110111000000111111111110 I
bx H
1G
b10111010110111000000111111111110 F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
b0 <
b1 ;
b0 :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b1 0
b1 /
b10111010110111000000111111111110 .
b0 -
b10111010110111000000111111111110 ,
b11000000000000000000000000000001 +
b0 *
b10111010110111000000111111111110 )
bx (
b0 '
b0 &
1%
0$
b0 #
b10111010110111000000111111111110 "
bx !
$end
#5
b10111010110111000000111111111110 !
b10111010110111000000111111111110 (
b10111010110111000000111111111110 9
b10111010110111000000111111111110 E
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
b10111010110111000000111111111110 8
b10111010110111000000111111111110 D
b10111010110111000000111111111110 H
1$
#10
b1 &
0$
#15
b11000000000000000000000000000001 !
b11000000000000000000000000000001 (
b11000000000000000000000000000001 9
b11000000000000000000000000000001 E
b11000000000000000000000000000001 8
b11000000000000000000000000000001 D
b11000000000000000000000000000001 H
1$
#20
0G
1J
b10 /
b10 0
b10 ;
bx !
bx (
bx 9
bx E
b10 &
b11001010111111101011101010111110 "
b11001010111111101011101010111110 )
b11001010111111101011101010111110 ,
b11001010111111101011101010111110 .
b11001010111111101011101010111110 F
b11001010111111101011101010111110 I
b11001010111111101011101010111110 L
b11001010111111101011101010111110 O
b11001010111111101011101010111110 R
b11001010111111101011101010111110 U
b11001010111111101011101010111110 X
b11001010111111101011101010111110 [
b1 #
b1 '
b1 *
b1 -
b1 :
b1 <
0$
#25
b11001010111111101011101010111110 !
b11001010111111101011101010111110 (
b11001010111111101011101010111110 9
b11001010111111101011101010111110 E
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
b11001010111111101011101010111110 7
b11001010111111101011101010111110 C
b11001010111111101011101010111110 K
1$
#30
0J
1M
b100 /
b100 0
b100 ;
bx !
bx (
bx 9
bx E
b11 &
b11011110110010101111101110101101 "
b11011110110010101111101110101101 )
b11011110110010101111101110101101 ,
b11011110110010101111101110101101 .
b11011110110010101111101110101101 F
b11011110110010101111101110101101 I
b11011110110010101111101110101101 L
b11011110110010101111101110101101 O
b11011110110010101111101110101101 R
b11011110110010101111101110101101 U
b11011110110010101111101110101101 X
b11011110110010101111101110101101 [
b10 #
b10 '
b10 *
b10 -
b10 :
b10 <
0$
#35
b11000000000000000000000000000001 !
b11000000000000000000000000000001 (
b11000000000000000000000000000001 9
b11000000000000000000000000000001 E
b11000000000000000000000000000001 6
b11000000000000000000000000000001 B
b11000000000000000000000000000001 N
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
1$
#40
0M
1P
b1000 /
b1000 0
b1000 ;
bx !
bx (
bx 9
bx E
b100 &
b11000000110111101101000000001101 "
b11000000110111101101000000001101 )
b11000000110111101101000000001101 ,
b11000000110111101101000000001101 .
b11000000110111101101000000001101 F
b11000000110111101101000000001101 I
b11000000110111101101000000001101 L
b11000000110111101101000000001101 O
b11000000110111101101000000001101 R
b11000000110111101101000000001101 U
b11000000110111101101000000001101 X
b11000000110111101101000000001101 [
b11 #
b11 '
b11 *
b11 -
b11 :
b11 <
0$
#45
b11000000110111101101000000001101 !
b11000000110111101101000000001101 (
b11000000110111101101000000001101 9
b11000000110111101101000000001101 E
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
b11000000110111101101000000001101 5
b11000000110111101101000000001101 A
b11000000110111101101000000001101 Q
1$
#50
0P
1S
b10000 /
b10000 0
b10000 ;
bx !
bx (
bx 9
bx E
b101 &
b11111111000111001110 "
b11111111000111001110 )
b11111111000111001110 ,
b11111111000111001110 .
b11111111000111001110 F
b11111111000111001110 I
b11111111000111001110 L
b11111111000111001110 O
b11111111000111001110 R
b11111111000111001110 U
b11111111000111001110 X
b11111111000111001110 [
b100 #
b100 '
b100 *
b100 -
b100 :
b100 <
0$
#55
b11000000000000000000000000000001 !
b11000000000000000000000000000001 (
b11000000000000000000000000000001 9
b11000000000000000000000000000001 E
b11000000000000000000000000000001 4
b11000000000000000000000000000001 @
b11000000000000000000000000000001 T
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
1$
#60
0S
1V
b100000 /
b100000 0
b100000 ;
bx !
bx (
bx 9
bx E
b110 &
b10001011101011011111000000001101 "
b10001011101011011111000000001101 )
b10001011101011011111000000001101 ,
b10001011101011011111000000001101 .
b10001011101011011111000000001101 F
b10001011101011011111000000001101 I
b10001011101011011111000000001101 L
b10001011101011011111000000001101 O
b10001011101011011111000000001101 R
b10001011101011011111000000001101 U
b10001011101011011111000000001101 X
b10001011101011011111000000001101 [
b101 #
b101 '
b101 *
b101 -
b101 :
b101 <
0$
#65
b10001011101011011111000000001101 !
b10001011101011011111000000001101 (
b10001011101011011111000000001101 9
b10001011101011011111000000001101 E
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
b10001011101011011111000000001101 3
b10001011101011011111000000001101 ?
b10001011101011011111000000001101 W
1$
#70
0V
1Y
b1000000 /
b1000000 0
b1000000 ;
bx !
bx (
bx 9
bx E
b111 &
b10110001000001011111000000001101 "
b10110001000001011111000000001101 )
b10110001000001011111000000001101 ,
b10110001000001011111000000001101 .
b10110001000001011111000000001101 F
b10110001000001011111000000001101 I
b10110001000001011111000000001101 L
b10110001000001011111000000001101 O
b10110001000001011111000000001101 R
b10110001000001011111000000001101 U
b10110001000001011111000000001101 X
b10110001000001011111000000001101 [
b110 #
b110 '
b110 *
b110 -
b110 :
b110 <
0$
#75
b11000000000000000000000000000001 !
b11000000000000000000000000000001 (
b11000000000000000000000000000001 9
b11000000000000000000000000000001 E
b11000000000000000000000000000001 2
b11000000000000000000000000000001 >
b11000000000000000000000000000001 Z
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
1$
#80
0Y
1\
b10000000 /
b10000000 0
b10000000 ;
bx !
bx (
bx 9
bx E
b1000 &
b1101000101011110101001011110 "
b1101000101011110101001011110 )
b1101000101011110101001011110 ,
b1101000101011110101001011110 .
b1101000101011110101001011110 F
b1101000101011110101001011110 I
b1101000101011110101001011110 L
b1101000101011110101001011110 O
b1101000101011110101001011110 R
b1101000101011110101001011110 U
b1101000101011110101001011110 X
b1101000101011110101001011110 [
b111 #
b111 '
b111 *
b111 -
b111 :
b111 <
0$
#85
b1101000101011110101001011110 !
b1101000101011110101001011110 (
b1101000101011110101001011110 9
b1101000101011110101001011110 E
b11000000000000000000000000000001 "
b11000000000000000000000000000001 )
b11000000000000000000000000000001 ,
b11000000000000000000000000000001 .
b11000000000000000000000000000001 F
b11000000000000000000000000000001 I
b11000000000000000000000000000001 L
b11000000000000000000000000000001 O
b11000000000000000000000000000001 R
b11000000000000000000000000000001 U
b11000000000000000000000000000001 X
b11000000000000000000000000000001 [
b1101000101011110101001011110 1
b1101000101011110101001011110 =
b1101000101011110101001011110 ]
1$
#90
1G
0\
b1 /
b1 0
b1 ;
b11000000000000000000000000000001 !
b11000000000000000000000000000001 (
b11000000000000000000000000000001 9
b11000000000000000000000000000001 E
b1001 &
b0 #
b0 '
b0 *
b0 -
b0 :
b0 <
0$
